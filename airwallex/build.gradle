plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'kotlin-parcelize'
}

apply from: "../ktlint.gradle"

def DEVICE_FINGERPRINT_ORG_ID = '"1snn5n9w"'
def DEVICE_FINGERPRINT_MERCHANT_ID = '"airwallex_cybs"'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.compileSdkVersion

        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName

        consumerProguardFiles 'proguard-rules.pro'

        vectorDrawables.useSupportLibrary = true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        testInstrumentationRunnerArguments clearPackageData: 'true'
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }

    buildTypes {
        debug {
            testCoverageEnabled true
        }
    }

    buildFeatures {
        viewBinding true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    lintOptions {
        abortOnError true
        disable 'ParcelCreator', 'VectorPath', 'IconDipSize', 'UnsafeExperimentalUsageWarning'
    }
}

android.buildTypes.each { type ->
    type.buildConfigField 'String', 'DEVICE_FINGERPRINT_ORG_ID', DEVICE_FINGERPRINT_ORG_ID
    type.buildConfigField 'String', 'DEVICE_FINGERPRINT_MERCHANT_ID', DEVICE_FINGERPRINT_MERCHANT_ID
}

dependencies {
    api project(':ui-core')

    // glide
    api 'com.github.bumptech.glide:glide:4.12.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.12.0'

    // test
    testImplementation "junit:junit:$junitVersion"
    testImplementation "org.robolectric:robolectric:$robolectricVersion"
    testImplementation "androidx.test:core:$testCoreVersion"
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlinVersion"
    testImplementation "org.jetbrains.kotlin:kotlin-test-annotations-common:$kotlinVersion"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0"
}

apply from: rootProject.file('publish.gradle')
apply from: rootProject.file('deploy.gradle')

ext {
    libraryVersion = "${android.defaultConfig.versionName}"
}