buildscript {
    ext.kotlinVersion = '1.5.30'
    repositories {
        google()
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:4.2.2'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath 'com.github.dcendents:android-maven-gradle-plugin:1.5'
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:1.4.20"
    }
}

plugins {
    id "nl.neotech.plugin.rootcoverage" version "1.4.0"
}

allprojects {
    repositories {
        google()
        mavenCentral()
    }
}

jacoco {
    // https://www.jacoco.org/jacoco/trunk/doc/changes.html
    toolVersion = "0.8.7"
}

rootCoverage {

    excludes = [
            "**/extension",
            "**/ui",
            "**/log",
            "**/AirwallexStarter*.*",
            "**/card/AirwallexSecurityConnector.class",
            "**/card/ThreeDSecureManager.class",
            "**/*Activity*.*",
            "**/*ActivityLaunch*.*",
            "**/core/Airwallex.class",
            "**/core/AirwallexPaymentManager.class",
            "**/core/AirwallexApiRepository.class",
            // These will be change
            "**/view/PaymentInfoBottomSheetDialog.class",
            "**/view/PaymentMethods*.*"
    ]

    generateHtml true
    generateXml true
    generateCsv false
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

// Update the version field when a new version is released
version = '3.0.0-alpha01'

ext {
    buildToolsVersion = "30.0.2"
    compileSdkVersion = 29
    minSdkVersion = 19

    ktlintVersion = '0.41.0'
    kotlinCoroutinesVersion = '1.5.2'

    wechatPayVersion = "6.6.4"

    junitVersion = '4.13.2'
    robolectricVersion = '4.6.1'
    testCoreVersion = '1.4.0'

    versionCode = 1
    versionName = version
}

if (JavaVersion.current().isJava8Compatible()) {
    allprojects {
        tasks.withType(Javadoc) {
            options.addStringOption('Xdoclint:none', '-quiet')
            options.addStringOption('encoding', 'UTF-8')
        }
    }
}