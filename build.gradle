buildscript {
    ext {
        kotlinVersion = '1.7.20'
        jacocoVersion = '0.8.8'
        detektVersion = '1.21.0'
    }
    repositories {
        google()
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:7.3.1'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:1.7.10"
    }
}

plugins {
    id "io.gitlab.arturbosch.detekt" version "${detektVersion}"
    id "nl.neotech.plugin.rootcoverage" version "1.5.3"
    id "org.sonarqube" version "3.3"
    id "io.github.gradle-nexus.publish-plugin" version "1.1.0"
}

tasks.withType(io.gitlab.arturbosch.detekt.Detekt).configureEach {
    reports {
        html.required.set(true)
        xml.required.set(true)
        txt.required.set(true)
    }
}

tasks.withType(Test) {
    jacoco.includeNoLocationClasses = true
}

allprojects {
    repositories {
        google()
        mavenCentral()
    }
}

jacoco {
    // https://www.jacoco.org/jacoco/trunk/doc/changes.html
    toolVersion = "$jacocoVersion"
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

// Update the version field when a new version is released
version = '4.3.0'

ext {
    compileSdkVersion = 33
    minSdkVersion = 21

    kotlinCoroutinesVersion = '1.5.2'

    wechatPayVersion = "6.6.4"

    junitVersion = '4.13.2'
    robolectricVersion = '4.10.3'
    testCoreVersion = '1.4.0'

    versionCode = System.getenv("AIRWALLEX_VERSION_CODE") as Integer ?: 1
    versionName = version
}

if (JavaVersion.current().isJava8Compatible()) {
    allprojects {
        tasks.withType(Javadoc) {
            options.addStringOption('Xdoclint:none', '-quiet')
            options.addStringOption('encoding', 'UTF-8')
        }
    }
}

subprojects {
    configurations.all {
        resolutionStrategy {
            eachDependency { details ->
                if ('org.jacoco' == details.requested.group) {
                    details.useVersion "$jacocoVersion"
                }
            }
        }
    }
}

apply from: "${rootDir}/gradle/scripts/publish-root.gradle"
apply from: "${rootDir}/sonar.gradle"