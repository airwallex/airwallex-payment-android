plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'kotlin-parcelize'
}

apply from: "../ktlint.gradle"

def DEVICE_FINGERPRINT_ORG_ID = '"1snn5n9w"'
def DEVICE_FINGERPRINT_MERCHANT_ID = '"airwallex_cybs"'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.compileSdkVersion

        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName

        consumerProguardFiles 'proguard-rules.pro'

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        testInstrumentationRunnerArguments clearPackageData: 'true'
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }

    buildFeatures {
        viewBinding true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    lintOptions {
        abortOnError true
        disable 'ParcelCreator'
    }
}

android.buildTypes.each { type ->
    type.buildConfigField 'String', 'DEVICE_FINGERPRINT_ORG_ID', DEVICE_FINGERPRINT_ORG_ID
    type.buildConfigField 'String', 'DEVICE_FINGERPRINT_MERCHANT_ID', DEVICE_FINGERPRINT_MERCHANT_ID
}

dependencies {

    api project(':components-core')
    api project(':ui-core')

    // material
    implementation 'com.google.android.material:material:1.4.0'

    // cardinal
    api 'io.github.airwallex:cardinalmobilesdk:2.2.3-2'

    // fingerprinting
    api 'io.github.airwallex:TrustDefender-Behavioral:6.1-67'
    api 'io.github.airwallex:TrustDefender-Profiling:6.1-67'
    api 'io.github.airwallex:TrustDefender-Profiling-Connections:6.1-67'

    // kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion"
    implementation "org.jetbrains.kotlin:kotlin-parcelize-runtime:$kotlinVersion"
    implementation "org.jetbrains.kotlin:kotlin-android-extensions-runtime:$kotlinVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlinCoroutinesVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlinCoroutinesVersion"

    // test
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.robolectric:robolectric:4.5.1'
    testImplementation 'androidx.test:core:1.4.0'
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlinVersion"
    testImplementation "org.jetbrains.kotlin:kotlin-test-annotations-common:$kotlinVersion"
}

apply from: rootProject.file('publish.gradle')
apply from: rootProject.file('deploy.gradle')

ext {
    libraryVersion = "${android.defaultConfig.versionName}"
}