apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-parcelize'
apply plugin: 'io.gitlab.arturbosch.detekt'
apply plugin: 'com.dicedmelon.gradle.jacoco-android'

dependencies {
    detektPlugins "io.gitlab.arturbosch.detekt:detekt-formatting:$detektVersion"
    detektPlugins project(path: ':airwallex-detekt-rules', configuration: 'default')
}

detekt {
    buildUponDefaultConfig = true
    config = files("$rootDir/config/detekt.yml")
}

android {
    compileSdkVersion rootProject.ext.compileSdkVersion

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.compileSdkVersion

        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName

        consumerProguardFiles 'proguard-rules.pro'

        vectorDrawables.useSupportLibrary = true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        testInstrumentationRunnerArguments clearPackageData: 'true'
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }

    buildTypes {
        debug {
            testCoverageEnabled true
        }
    }

    buildFeatures {
        viewBinding true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
        freeCompilerArgs += "-opt-in=kotlinx.coroutines.ExperimentalCoroutinesApi"
    }

    lint {
        abortOnError true
        disable 'ParcelCreator', 'VectorPath', 'UnsafeExperimentalUsageError', 'UnsafeExperimentalUsageWarning', 'IconDipSize'
    }
}